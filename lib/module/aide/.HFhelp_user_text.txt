=== AIDE COMMANDE proximite (alias `prox`) ===

Bienvenue dans le programme proximite dont le but principal est de corriger les
probl√®mes de trop grande proximit√© des mots dans un texte quelconque.

= COMMANDES PRINCIPALES =

Trouvez ci-dessous les commandes les plus usit√©es.

  [0;93mprox[imite] check mon/fichier.txt[0m

      Incontournable, elle lance le check du texte contenu dans le fichier
      `mon/fichier.txt`

  [0;93mprox[imite] show proximites [-i][0m
  prox[imite] correct

      Si c'est un texte court, on peut afficher la liste des proximit√©s de cette
      fa√ßon, sans l'option `-i`. Si c'est un texte long, l'option `-i` (pour in-
      teractif) permettra d'afficher les proximit√©s l'une apr√®s l'autre.

      Noter que la commande `correct` sous-entend l'option `-i` par d√©faut.

  [0;93mprox[imite] show texte [--from_page=C][--to_page=X][0m
  [0;93mprox[imite] texte [--from_page=C][--to_page=X][0m

      Permet d'afficher le texte avec l'indication des proximit√©s. Si le texte
      est long, on peut demander l'affichage de pages en pages avec :

  [0;93mprox[imite] show texte -pp[0m
  [0;93mprox[imite] show texte --per_page[0m

      Affiche le texte avec l'indication des proximit√©s de page en page.


= BASE DES COMMANDES =

  La base des commandes est¬†:

      [0;93mprox[imite] [commande] [arg-commande] [path] [options][0m

  Le `[path]` peut √™tre omis si c‚Äôest le m√™me que pour la commande pr√©c√©dente.
  Pour le moment, les `[options]` doivent imp√©rativement √™tre mises apr√®s.

  Options g√©n√©rales
  -----------------

      [1m--verbose/-vb[0m     Mode verbeux, pour afficher tous les messages.

      [1m--ksort=[count|mot][0m

          Permet de d√©terminer la cl√© de classement lors de l'affichage d'une
          liste. Par exemple, pour voir les occurences de tous les mots class√©s
          par ordre alphab√©tique¬†:

              [0;93mprox show occurences test/texte_court.txt --ksort=mot[0m
              [0;93mprox proximites --ksort=count[0m

          Par d√©faut, c'est `count` qui est utilis√©, en mettant les plus nom-
          breux en haut (ordre d√©croissant).

      [1m--all[0m

          Pour  tout traiter, suivant les cas. Par exemple, avec les proximit√©s,
          l‚Äôoption signifie qu‚Äôil faut afficher toutes les proximit√©s, m√™me cel-
          les qui ont √©t√© marqu√©es supprim√©es ou trait√©es¬†:

              [0;93mprox show proximites test/texte_long.txt --all[0m

      [1m--only=X[0m

          Pour limiter l‚Äôaffichage √† un certain nombre d‚Äôitems. Ne fonctionne
          pas encore pour tout.
          Par exemple, si on veut seulement voir les 100 premiers mots √† occu-
          rences fortes, on peut faire¬†:

              [0;93mprox show occurences --only=100 mon/fichier/texte.txt[0m

      [1m-tr/--treated[0m

          Pour ne consid√©rer que les occurences trait√©es. Par exemple, quand on
          demande :

              [0;93mprox show occurences --treated[0m

          ‚Ä¶ alors seules les occurences trait√©es seront affich√©es.
          Noter que le path n'est pas indiqu√©, il s'agit donc du dernier fichier
          trait√©s.

      [1m-t/--texte[0m

          Indique que le dernier param√®tre n‚Äôest pas le path  du  fichier texte,
          mais le texte √† √©tudier. Par exemple¬†:

              [0;93mprox -t check \"Le texte √† √©tudier.\"[0m

  Configuration
  -------------

  On peut d√©finir certaines propri√©t√©s √† l'aide des options.


  Aide
  ----

  [1mprox[0m [1mprox help[0m [1mprox aide[0m

      Pour afficher cette aide.

      Ajouter l‚Äôoption `-prog/--programmation` pour obenir l‚Äôaide programmateur.

  Analyse du texte
  ----------------

  [1mprox c[heck] <path> [options][0m
  [1mprox -t c[heck] <texte> [options][0m


      M√©thode principale pour checker le texte qui se trouve au path  +path+ ou
      le texte fourni. Le mieux est de se trouver dans ce dossier pour lancer la
      commande sur le fichier vis√©.

      Options
      -------

        [1m--from=X[0m

            Pour n'analyser le texte qu'√† partir du caract√®re d'offset X.

        [1m--to=X[0m

            Pour n'analyser le texte que jusqu'au caract√®re d'offset X.

        [1m--dmax_possible=<nombre signes|pages>[0m

            D√©finit la distance de proximit√© maximale.
            Rappel : la distance maximale de proximit√© entre deux occurences du
            m√™me mot (ou de deux mots similaires) d√©pend de sa densit√© dans le
            texte, i.e. son nombre d'occurences. Plus un mot est rare, plus sa
            distance de proximit√© est grande (car on le remarquera plus).
            Mais avec des mots qui n'apparaitrait que 2 ou 3 fois sur 400 pages,
            la distance de proximit√© pourrait √™tre de 200 pages, ce qui est trop
            grand et ne veut plus rien dire.
            On utilise donc cette [1mdistance maximale possible[0m pour limiter la
            distance √† quelque chose de raisonnable¬†: 3 pages par d√©faut.
            Rappel : une page fait 1500 signes.
            Exemple pour limiter la distance max √† 2 pages, donc 3000 signes.

              prox check mon/texte.txt --dmax_possible=3000

            ou (le programme d√©tecte si ce sont des pages ou des signes √† partir
            du moment o√π le nombre est inf√©rieur ou sup√©rieur √† 50)

              prox check mon/texte.txt --dmax_possible=2


        [1m--dmax_normale=<nombre signes|pages>[0m

            Par d√©faut, la distance normale de proximit√© ‚Äî¬†c'est-√†-dire la distan-
            ce sous laquelle on consid√®re qu'un mot quelconque est en proximit√© ‚Äì
            est une page, soit 1500 signes.
            On peut modifier cette valeur avec cette option. Elle sera enregistr√©e
            dans les donn√©es du texte (fichier .config.rb)
            Par exemple¬†:

              [0;93mprox check -t \"Mon texte est un texte.\" --dmax_normale=10[0m

            ‚Ä¶ d√©finira que la distance normale est de 10 signes. Si deux occuren-
            ces du m√™me mot sont √† moins de 10 signes, ils sont consid√©r√©s comme
            proches.

        [1m--fin[0m

            L'analyse de proximit√© se fait sur la base d'une page, c'est-√†-dire
            de 1500.0 signes. En ajoutant cette op-
            tions, on peut faire un traitement plus fin, qui tienne un peu comp-
            te de la ‚Äúraret√©‚Äù du mot. Si un mot est tr√®s rare (moins de 0.02
            pour 1000 mots), on ne devrait pas le trouver √† moins de 4 pages et
            s'il est simplement ‚Äúrare‚Äù, on ne devra pas le trouver √† moins de 2
            pages d'une de ses occurences.

        [1m--log[0m

            Pour enregistrer dans un fichier tous les choix qui ont permis de
            faire les choix de proximit√©. Ce fichier doit permettre de s'assurer
            que le check du texte est valide de fa√ßon manuelle mais aussi pour
            les tests.

            Pour lire le log, utiliser la commande :

                [0;93mprox[imite] show log[0m

  Affichage des r√©sultats
  =======================

    R√©sum√© des commandes
    --------------------

          [0;93mprox[imite] show proximites [-i][--all][0m
          [0;93mprox[imite] show proximite <mot> [-i][0m
          [0;93mprox[imite] show proximite <ID> [-i][0m
          [0;93mprox[imite] proximites [--all][0m

          [0;93mprox[imite] show occurences[0m
          [0;93mprox[imite] show occurence <mot>[0m
          [0;93mprox[imite] occurences[0m

          [0;93mprox[imite] show text[e] [-fp/--from_page=X] [-tp/--to_page=Z][0m

          [0;93mprox[imite] infos[0m
          [0;93mprox[imite] stats[0m


  [1mprox s[how] <what> [path] [options][0m

      Permet d'afficher les r√©sultats de test de proximit√©  et  d'occurence.  On
      peut les afficher en console ou  dans un fichier s√©par√©s  ne contenant que
      les informations demand√©es.

      Noter que le `path` doit toujours √™tre  le dernier param√®tre,  et  que  la
      chose √† afficher doit toujours √™tre en second param√®tre apr√®s le `show`.

      Sans option, les donn√©es sont affich√©es en console. Pour les  mettre  dans
      un fichier qui sera ouvert¬†:

          [0;93mprox s[how] [path] --output=[format]/-o=[format] --open[0m

      Par d√©faut, le format est du simple texte (.txt)

  [0;93mprox[imite] proximites [--ksort=count][0m

      Permet d‚Äôafficher seulement les mots qu'on trouve en proximit√©s, sans
      r√©p√©tition, mais sans d√©tail de ces proximit√©s.

  [0;93mprox[imite] show text[e][0m

      Affiche le texte en indiquant les proximit√©s qui ont √©t√© relev√©es, de fa-
      √ßon tr√®s visuel.

      Avec les options --from_page (-fp) et/ou --to_page, on peut limiter l'af-
      ficchage √† une portion de texte (une page fait 1500 signes par d√©faut).
      Exemple¬†:

          [0;93mprox show texte --from_page=1O0 -tp=120[0m
          # Affiche le texte, des pages 100 √† 120

      On peut aussi le faire avec --from et --to en indiquand le d√©calage. Par
      exemple :

          [0;93mprox show text --from=12566 --to=12800[0m
          # Affiche le texte, du signe 12566 au signe 12800

  [0;93mprox s[how] stats [path][0m

      Pour afficher les statistiques concernant le texte, c‚Äôest-√†-dire le nombre de
      mots, de proxmit√©s, la longueur du texte, etc.


  Affichage des proximit√©s pour corrections
  =========================================

      R√©sum√© de toutes les commandes
      ------------------------------

          [0;93mprox s[how] proximites [path] [options][0m
            # Affiche toutes les proximit√©s les unes au-dessus des autres.
          [0;93mprox -i s[how] proximites [path] [options][0m
            # Passe en revue toutes les proximit√©s en mode interactif
          [0;93mprox s[how] proximite <mot> [path] [options][0m
            # Noter le singulier.
            # Proximit√©s du mot <mot>. Avec l‚Äôoption `-i`, en mode interactif.
          [0;93mprox s[how] proximite <ID> [path] [options][0m
            # Noter le singulier.
            # Proximit√© d'identifiant <ID> en mode interactif avec l‚Äôoption -i.
          [0;93mprox[imite] proximites [--ksort=count][0m
            # Affiche la liste simple des mots en proximit√©, class√©s soit par
            # order alphab√©tique (d√©faut) soit suivant le nombre de proximit√©s
            # trouv√©es (--ksort=count)

      D√©tail/explications
      -------------------

  C‚Äôest cette fonction qui a pr√©sid√© √† la construction de ce petit programme.
  Pouvoir faire une analyse des proximit√©s de mots et pouvoir les corriger, sa-
  chant que le fran√ßais supporte mal ces r√©p√©titions.

  Apr√®s avoir lanc√© le check du texte (`[0;93mprox check mon/fichier.txt[0m`), on
  peut lancer la commande suivante pour voir s‚Äôafficher toutes les proximit√©s¬†:

      [0;93mprox s[how] proximites[0m

  (noter que le path a √©t√© m√©moris√©, inutile de le remettre)
  Cette m√©thode affiche toutes les proximit√©s de mots trouv√©s.

  Mais pour un texte long (quelques centaines de pages), c‚Äôest plut√¥t indigeste,
  et il est beaucoup plus pratique d‚Äôafficher les proximit√©s les unes apr√®s les
  autres gr√¢ce √† l‚Äôoption `interactif` :

      [0;93mprox -i s[how] proximites[0m ou [0;93mprox correct[0m

  Les avantages sont les suivants¬†:

    * On peut indiquer les corrections que l‚Äôon fait (les proximit√©s ne seront
      plus pr√©sent√©es aux prochaines sessions).
    * On peut supprimer des proximit√©s qu‚Äôon ne juge pas pertinentes.
    * La portion de texte montr√©e est beaucoup plus grande, qui permet de cor-
      riger ‚Äú√† l‚Äô√©cran‚Äù avant de reporter la correction.
    * Le programme calcule le temps de correction et estime le temps qui sera
      n√©cessaire pour corriger tout le texte. Ce temps est bien s√ªr enregistr√©
      d‚Äôune session √† l‚Äôautre, ce qui permet d‚Äôaffiner grandement le calcul.

  Information sur un mot
  ======================

      [0;93mprox[imite] s[how] <mot> [--deep][0m

          Affiche toutes les informations sur le mot <mot>, c‚Äôest-√†-dire son
          nombre d‚Äôoccurences, de proximit√©s.

          Si l‚Äôoption [1m--deep[0m est utilis√©e, on affiche les infos en
          profondeur, c‚Äôest-√†-dire par exemple qu‚Äôon va donner les offsets de
          chacune des occurences, le d√©tail des proximit√©s, etc.

  Informations sur le texte
  =========================

  [1mprox[imite] infos[0m

  Affiche des informations g√©n√©rales sur le texte, comme la derni√®re commande
  utilis√©e, le nombre de corrections effectu√©es, la dur√©e moyenne de correction,
  etc. Ce fichier a √©t√© initi√© notamment pour pouvoir pr√©dire le temps de cor-
  rection du texte entier en fonction de la dur√©e moyenne de correction.

  Cette commande n‚Äôest pas √† confondre avec la commande `prox show stats` qui
  affiche des statistiques sur le nombre de mots, de signes, de proximit√©s,
  etc.

  R√©cup√©rer les informations d'un autre fichier
  ---------------------------------------------

  On peut r√©cup√©rer des informations g√©n√©rales (comme la dur√©e des corrections)
  d'un autre fichier √† l'aide de la commande [0;93mget[0m¬†:

      [0;93mprox[imit√©] get infos <path/to/file>[0m

  Les informations r√©cup√©r√©es sont¬†:

      * la dur√©e des corrections.
