


START PROGRAMME
Instanciation de la proximit√© #1 entre les mots texte:1 et texte:7
Instanciation de la proximit√© #2 entre les mots texte:7 et texte:14
Instanciation de la proximit√© #3 entre les mots marion:4 et marion:11
-> Texte#save_all
-> Texte#save_mots‚Ä¶ OK
<- Texte#save_all
[Tests::next_touche] "q" en r√©ponse √† askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la m√™me) [ ]") (touches restantes : [])
EOP



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximit√©s correspondent.
[Tests::next_touche] "q" en r√©ponse √† askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la m√™me) [ ]") (touches restantes : [])
EOP



START PROGRAMME
Instanciation de la proximit√© #1 entre les mots texte:1 et texte:7
Instanciation de la proximit√© #2 entre les mots texte:7 et texte:14
Instanciation de la proximit√© #3 entre les mots marion:4 et marion:11
-> Texte#save_all
-> Texte#save_mots‚Ä¶ OK
<- Texte#save_all
[Tests::next_touche] "q" en r√©ponse √† askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la m√™me) [ ]") (touches restantes : [])
EOP



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximit√©s correspondent.
-> Proximity::_show(mot = nil)
liste_proximites = [PROXIMITY ID #1
mot avant : [0;93mtexte[0m index:1 offset:3 len:5
mot apr√®s : [0;93mtexte[0m index:7 offset:37 len:5 (√† 34 signes)
Treated? false / Deleted? false, PROXIMITY ID #2
mot avant : [0;93mtexte[0m index:7 offset:37 len:5
mot apr√®s : [0;93mtexte[0m index:14 offset:70 len:5 (√† 33 signes)
Treated? false / Deleted? false, PROXIMITY ID #3
mot avant : [0;93mmarion[0m index:4 offset:22 len:6
mot apr√®s : [0;93mmarion[0m index:11 offset:55 len:6 (√† 33 signes)
Treated? false / Deleted? false]
Nombre de proximit√©s : 3
-> Proximity::traite_proximite_mode_interactif(iprox.id=1/iprox.object_id:70094089228980)
Contr√¥le d‚Äôinstance (proximity) dans traite_proximite_mode_interactif
	Contr√¥le de la proximit√© #1
	Proximit√© en argument    : 70094089228980
	Proximit√© dans Proximity : 70094089228980
		Mot avant dans prox argument : 70094093000420
		          dans Texte.mots    : 70094093000420
		
[Tests::next_touche] "rs marion" en r√©ponse √† askFor("Op√©ration choisie") (touches restantes : [true, "oo", "z", true, "q"])
-> remplacer_mot_par_mot
[Tests::next_touche] "true" en r√©ponse √† yesOrNo("Veux-tu remplacer le mot \"texte\" par \"marion\"") (touches restantes : ["oo", "z", true, "q"])
-> Texte::Mot#replace
La proximit√© avant #1 est √† d√©truire.
Nouveau compte de proximit√©s mis √† 2 apr√®s destruction de proximit√© #1.
La proximit√© apr√®s #2 est √† d√©truire.
Nouveau compte de proximit√©s mis √† 1 apr√®s destruction de proximit√© #2.
Instanciation de la proximit√© #4 entre les mots marion:7 et marion:11
Instanciation de la proximit√© #5 entre les mots marion:4 et marion:7
Check de la nouvelle proximit√© arri√®re de l'ancien mot avant : [0;93mtexte[0m index:1 offset:3 len:5
Instanciation de la proximit√© #6 entre les mots texte:1 et texte:14
Check de la nouvelle proximit√© vers l'avant de l'ancien mot apr√®s : [0;93mtexte[0m index:14 offset:70 len:5
Les mots "texte" √† 3 et 70 sont d√©j√† en proximit√©.
Apr√®s recherche des nouvelles proximit√©s
	prox_ids = {:avant=>5, :apres=>4}
	imot_avant.prox_ids = {:apres=>6}
	imot_apres.prox_ids = {:avant=>6}
[Tests::next_touche] "oo" en r√©ponse √† askFor("Op√©ration choisie") (touches restantes : ["z", true, "q"])
-> Proximity::traite_proximite_mode_interactif(iprox.id=3/iprox.object_id:70094089228560)
Contr√¥le d‚Äôinstance (proximity) dans traite_proximite_mode_interactif
	Contr√¥le de la proximit√© #3
	Proximit√© en argument    : 70094089228560
	Proximit√© dans Proximity : 70094089228560
		Mot avant dans prox argument : 70094092999920
		          dans Texte.mots    : 70094092999920
		
[Tests::next_touche] "z" en r√©ponse √† askFor("Op√©ration choisie") (touches restantes : [true, "q"])
[Tests::next_touche] "true" en r√©ponse √† yesOrNo("Faut-il enregistrer les changements op√©r√©s¬†?") (touches restantes : ["q"])
-> Texte#save_all
-> Texte#save_mots‚Ä¶ OK
<- Texte#save_all
<- Proximity::_show
[Tests::next_touche] "q" en r√©ponse √† askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la m√™me) [ ]") (touches restantes : [])
EOP



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximit√©s correspondent.
[Tests::next_touche] "q" en r√©ponse √† askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la m√™me) [ ]") (touches restantes : [])
EOP
