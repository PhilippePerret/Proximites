


START PROGRAMME
-> Texte#save_all
-> Texte#save_motsâ€¦ OK
<- Texte#save_all
-> next_touche (rÃ©ponses restantes : ["q"])
"q" = rÃ©ponse retournÃ©e pour askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la mÃªme) [ ]") (nouvelles rÃ©ponses restants : [])
EOP
-> Texte#load_mots... OK



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximitÃ©s correspondent.
-> next_touche (rÃ©ponses restantes : ["q"])
"q" = rÃ©ponse retournÃ©e pour askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la mÃªme) [ ]") (nouvelles rÃ©ponses restants : [])
EOP



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximitÃ©s correspondent.
-> Proximity::_show(mot = nil)
liste_proximites = [PROXIMITY ID #0
mot avant : [0;93mtexte[0m index:1 offset:3 len:5
mot aprÃ¨s : [0;93mtexte[0m index:6 offset:32 len:5 (Ã  29 signes)
Treated? false / Deleted? false]
Nombre de proximitÃ©s : 1
-> Proximity::traite_proximite_mode_interactif(iprox.id=0/iprox.object_id:70337970671100)
ContrÃ´le dâ€™instance (proximity) dans traite_proximite_mode_interactif
	ContrÃ´le de la proximitÃ© #0
	ProximitÃ© en argument    : 70337970671100
	ProximitÃ© dans Proximity : 70337970671100
		Mot avant dans prox argument : 70337979000420
		          dans Texte.mots    : 70337979000420
		
-> next_touche (rÃ©ponses restantes : ["rp bonjour", true, "oo", true, "q"])
"rp bonjour" = rÃ©ponse retournÃ©e pour askFor("OpÃ©ration choisie") (nouvelles rÃ©ponses restants : [true, "oo", true, "q"])
-> remplacer_mot_par_mot
-> next_touche (rÃ©ponses restantes : [true, "oo", true, "q"])
"true" = rÃ©ponse retournÃ©e pour yesOrNo("Veux-tu vraiment remplacer le mot \"texte\" par \"bonjour\"") (nouvelles rÃ©ponses restants : ["oo", true, "q"])
-> Proximity::replace(iprox #0, pour_premier:true, nouveau_mot:"bonjour")
   Index du mot Ã  remplacer : 1
   Index du mot Ã  NE PAS remplacer : 6
AprÃ¨s destruction de la proximitÃ© : 
	imot.prox_ids = {:apres=>nil}
	autre_imot.prox_ids = {:avant=>nil}
Identifiant de lâ€™objet Ã  modifier
		imot.object_id = 70337979000420 / Texte.current.mots[1].object_id = 70337979000420
Identifiant de lâ€™objet modifiÃ©
		imot.object_id = 70337979000420 / Texte.current.mots[1].object_id = 70337979000420
AprÃ¨s remplacement du terme dans lâ€™instance Texte::MotÂ :
		imot.mot      = "bonjour" / dans texte_courantÂ : "bonjour"
		imot.real_mot = "bonjour" / dans texte_courantÂ : "bonjour"
		imot.mot_base = "bonjour" / dans texte_courantÂ : "bonjour"
AprÃ¨s recherche des nouvelles proximitÃ©s pour les deux mots
	imot.prox_ids = {:apres=>nil}
	autre_imot.prox_ids = {:avant=>nil}
-> next_touche (rÃ©ponses restantes : ["oo", true, "q"])
"oo" = rÃ©ponse retournÃ©e pour askFor("OpÃ©ration choisie") (nouvelles rÃ©ponses restants : [true, "q"])
-> next_touche (rÃ©ponses restantes : [true, "q"])
"true" = rÃ©ponse retournÃ©e pour yesOrNo("Faut-il enregistrer les changements opÃ©rÃ©sÂ ?") (nouvelles rÃ©ponses restants : ["q"])
-> Texte#save_all
-> Texte#save_motsâ€¦ OK
<- Texte#save_all
<- Proximity::_show
-> next_touche (rÃ©ponses restantes : ["q"])
"q" = rÃ©ponse retournÃ©e pour askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la mÃªme) [ ]") (nouvelles rÃ©ponses restants : [])
EOP



START PROGRAMME
-> Texte#load_all
-> Texte#load_mots... OK
Au chargement, les object_id des intances Texte::Mot des proximitÃ©s correspondent.
-> next_touche (rÃ©ponses restantes : ["q"])
"q" = rÃ©ponse retournÃ©e pour askFor("Commande suivante sans `proximite ` (q, z = terminer, h = historique, rien pour la mÃªme) [ ]") (nouvelles rÃ©ponses restants : [])
EOP
